on: [push, pull_request, workflow_dispatch]
name: opensoldat
jobs:
  linux-build-smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake git fpc libprotobuf-dev protobuf-compiler libssl-dev libsdl2-dev libopenal-dev libphysfs-dev libfreetype6

      - name: Compile opensoldat
        run: |
          export BUILD_ID=${GITHUB_SHA::8}
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=./opensoldat -DCMAKE_BUILD_TYPE=Release
          make
          make install
          cmake .. -DBUILD_CLIENT=0 -DCMAKE_INSTALL_PREFIX=./opensoldatserver -DCMAKE_BUILD_TYPE=Release
          make install

  appimage:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Otherwise `git describe --tags` doesn't work

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake git fpc libprotobuf-dev protobuf-compiler libssl-dev libsdl2-dev libopenal-dev libphysfs-dev libfreetype6

      - name: Compile opensoldat
        run: |
          export BUILD_ID=${GITHUB_SHA::8}
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=./opensoldat/AppDir -DCMAKE_BUILD_TYPE=Release
          make
          make install
          make clean
          cmake .. -DBUILD_CLIENT=0 -DCMAKE_INSTALL_PREFIX=./opensoldatserver/AppDir -DCMAKE_BUILD_TYPE=Release
          make install

      - name: Build AppImages
        run: |
          ./.github/workflows/make-appimage.sh build/opensoldat client
          ./.github/workflows/make-appimage.sh build/opensoldatserver server

      - name: Upload client AppImage
        uses: actions/upload-artifact@v2
        with:
          name: appimages
          path: build/opensoldat/*.AppImage

      - name: Upload server AppImage
        uses: actions/upload-artifact@v2
        with:
          name: appimages
          path: build/opensoldatserver/*.AppImage

  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache fpc
        id: fpc
        uses: actions/cache@v2
        with:
          path: C:\fpc
          key: freepascal

      - name: Cache vcpkg
        id: vcpkg-cache
        uses: actions/cache@v2
        with:
          path: C:\vcpkg\installed
          key: vcpkg-cache

      - name: Configure VS Toolchain
        uses: ilammy/msvc-dev-cmd@v1

      - name: Download freepascal
        if: steps.fpc.outputs.cache-hit != 'true'
        run: |
          curl -o C:\fpc32.exe ftp://mirror.freemirror.org/pub/fpc/dist/3.0.4/i386-win32/fpc-3.0.4.i386-win32.exe
          curl -o C:\fpc64.exe ftp://mirror.freemirror.org/pub/fpc/dist/3.0.4/i386-win32/fpc-3.0.4.i386-win32.cross.x86_64-win64.exe

      - name: Install freepascal
        if: steps.fpc.outputs.cache-hit != 'true'
        run: |
           C:\fpc32.exe /silent /nocancel /suppressmsgboxes=no
           C:\fpc64.exe /silent /nocancel /suppressmsgboxes=no
        shell: cmd

      - name: Install dependencies
        run: |
          vcpkg.exe --triplet x64-windows install sdl2 physfs openssl protobuf freetype openal-soft

      - name: Build opensoldat
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          set PATH=%PATH%;C:\fpc\3.0.4\bin\i386-win32
          set OPENSSL_ROOT_DIR=C:\vcpkg\installed\x64-windows
          set PHYSFSDIR=C:\vcpkg\installed\x64-windows
          set BUILD_ID=%GITHUB_SHA:~0,8%
          mkdir build
          cd build
          cmake -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX=.\opensoldat -DCROSS_WINDOWS_64=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="C:\vcpkg\scripts\buildsystems\vcpkg.cmake"  -DSDL2_BUILDING_LIBRARY=1 ..
          nmake
          nmake install
        shell: cmd

      - uses: actions/upload-artifact@v2
        with:
          name: windows-build
          path: build/opensoldat/

  macos:
    runs-on: macos-10.15
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies
        run: |
          brew install openssl@1.1 protobuf fpc cmake sdl2 physfs freetype2

      - name: Compile opensoldat
        run: |
          export BUILD_ID=${GITHUB_SHA::8}
          mkdir build
          cd build
          export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/opt/openssl@1.1/lib/pkgconfig
          cmake -DCMAKE_INSTALL_PREFIX=./opensoldat -DOPENSSL_ROOT_DIR=$(brew --prefix openssl@1.1) ..
          make
          make install

      - name: Package soldat
        run: |
          cd build
          mv Frameworks soldat
          mkdir soldat/bin
          mv soldat/play-regular.ttf soldat/bin
          mv soldat/opensoldat soldat/bin
          mv soldat/soldat.smod soldat/bin
          mv soldat/opensoldatserver soldat/bin
          mkdir soldat/lib
          cp /usr/local/opt/sdl2/lib/libSDL2-2.0.0.dylib soldat/lib
          cp /usr/local/opt/freetype/lib/libfreetype.6.dylib soldat/lib
          cp /usr/local/opt/physfs/lib/libphysfs.1.dylib soldat/lib
          cp /usr/local/opt/libpng/lib/libpng16.16.dylib soldat/lib
          cp /usr/local/opt/protobuf/lib/libprotobuf.30.dylib soldat/lib
          cp /usr/local/opt/openssl@1.1/lib/libcrypto.1.1.dylib soldat/lib
          chmod -R u+w soldat/lib
          install_name_tool -change /usr/local/opt/sdl2/lib/libSDL2-2.0.0.dylib @executable_path/../lib/libSDL2-2.0.0.dylib ./soldat/bin/opensoldat
          install_name_tool -change /usr/local/opt/freetype/lib/libfreetype.6.dylib @executable_path/../lib/libfreetype.6.dylib ./soldat/bin/opensoldat
          install_name_tool -change /usr/local/opt/physfs/lib/libphysfs.1.dylib @executable_path/../lib/libphysfs.1.dylib ./soldat/bin/opensoldat
          install_name_tool -change /usr/local/opt/libpng/lib/libpng16.16.dylib @executable_path/../lib/libpng16.16.dylib ./soldat/lib/libfreetype.6.dylib
          install_name_tool -change /usr/local/opt/protobuf/lib/libprotobuf.30.dylib @executable_path/../lib/libprotobuf.30.dylib ./soldat/Frameworks/libGameNetworkingSockets.dylib
          install_name_tool -change /usr/local/opt/openssl@1.1/lib/libcrypto.1.1.dylib @executable_path/../lib/libcrypto.1.1.dylib ./soldat/Frameworks/libGameNetworkingSockets.dylib

      - uses: actions/upload-artifact@v2
        with:
          name: macos-build
          path: build/opensoldat

  continuous:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    needs: [appimage, windows, macos]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Zip build dirs back together
        run: |
          zip -r windows-build.zip windows-build
          zip -r macos-build.zip macos-build

      - name: Chmod and zip AppImages
        run: |
          cd appimages
          chmod u+x *.AppImage
          zip linux-appimage.zip opensoldat-*.AppImage
          zip linux-server-only-appimage.zip opensoldatserver-*.AppImage
          mv linux-appimage.zip linux-server-only-appimage.zip ..

      - name: Upload release
        uses: softprops/action-gh-release@fe9a9bd3295828558c7a3c004f23f3bf77d155b2
        with:
          tag_name: continuous
          files: |
            windows-build.zip
            macos-build.zip
            linux-appimage.zip
            linux-server-only-appimage.zip
          body: OpenSoldat 1.8 alpha dev build
          name: OpenSoldat 1.8 alpha dev build
